version: '3' # Version de la syntaxe Docker Compose utilisée

services:
  web:
    volumes:
      - ./parc:/var/www/html/parc # Monte le répertoire local ./parc dans le conteneur à /var/www/html/parc
    command: /bin/sh -c "copy.sh" # Commande à exécuter lorsque le conteneur démarre
    build: ./parc # Chemin du Dockerfile pour construire l'image du conteneur
    ports:
      - 4200:4200 # Mappe le port 4200 de l'hôte au port 4200 du conteneur
    hostname: "parc.loc" # Nom d'hôte du conteneur

  api:
    volumes:
      - ./python:/var/www/html/api # Monte le répertoire local ./python dans le conteneur à /var/www/html/api
    build: ./python # Chemin du Dockerfile pour construire l'image du conteneur
    ports:
      - 5000:5000 # Mappe le port 5000 de l'hôte au port 5000 du conteneur
    links:
      - database:mysql # Lien vers le service database avec l'alias mysql

  # Conteneur de la base de données - images Actency
  database:
    # @see https://github.com/Actency/docker-mysql
    image: mariadb:latest # Utilise l'image mariadb:latest depuis Docker Hub
    volumes:
      - /python:/var/www/html/api # Monte le répertoire local /python dans le conteneur à /var/www/html/api
    ports:
      - 3306:3306 # Mappe le port 3306 de l'hôte au port 3306 du conteneur
    environment:
      - MYSQL_ROOT_PASSWORD=mysqlroot # Définit le mot de passe root de MySQL
      - MYSQL_DATABASE=parc # Définit le nom de la base de données à créer
      - MYSQL_USER=mysqlusr # Définit le nom d'utilisateur MySQL
      - MYSQL_PASSWORD=mysqlpwd # Définit le mot de passe de l'utilisateur MySQL